[{"D:\\mwork\\github\\react-case\\src\\index.js":"1","D:\\mwork\\github\\react-case\\src\\reportWebVitals.js":"2","D:\\mwork\\github\\react-case\\src\\App.js":"3","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example1.js":"4","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example2.js":"5","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example3.js":"6","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example4.js":"7","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example5.js":"8","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example6.js":"9","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example7.js":"10","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\index.js":"11","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\index.js":"12","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example1.js":"13","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example2.js":"14","D:\\mwork\\github\\react-case\\src\\components\\communication\\context.js":"15","D:\\mwork\\github\\react-case\\src\\components\\communication\\hoc.js":"16"},{"size":500,"mtime":1611545147069,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1611545147069,"results":"19","hashOfConfig":"18"},{"size":1136,"mtime":1612148807325,"results":"20","hashOfConfig":"18"},{"size":1788,"mtime":1611565303467,"results":"21","hashOfConfig":"18"},{"size":2516,"mtime":1611565298147,"results":"22","hashOfConfig":"18"},{"size":649,"mtime":1611567367621,"results":"23","hashOfConfig":"18"},{"size":1892,"mtime":1611565264699,"results":"24","hashOfConfig":"18"},{"size":1022,"mtime":1611566803776,"results":"25","hashOfConfig":"18"},{"size":604,"mtime":1611566190195,"results":"26","hashOfConfig":"18"},{"size":1002,"mtime":1611638733159,"results":"27","hashOfConfig":"18"},{"size":1805,"mtime":1611640170590,"results":"28","hashOfConfig":"18"},{"size":960,"mtime":1611649398959,"results":"29","hashOfConfig":"18"},{"size":1651,"mtime":1611649253088,"results":"30","hashOfConfig":"18"},{"size":564,"mtime":1611649257261,"results":"31","hashOfConfig":"18"},{"size":814,"mtime":1611909093232,"results":"32","hashOfConfig":"18"},{"size":1673,"mtime":1612156413090,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1llzjxv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\mwork\\github\\react-case\\src\\index.js",[],["73","74"],"D:\\mwork\\github\\react-case\\src\\reportWebVitals.js",[],"D:\\mwork\\github\\react-case\\src\\App.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example1.js",["75","76","77","78","79"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\n/*\r\n\r\n    useState\r\n    \r\n    useState 是react自带的一个hook函数，它的作用是用来声明状态变量。\r\n\r\n*/\r\n// 类\r\nclass Example extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>你点击{this.state.count}次</p>\r\n                <button onClick={this.addCount}>点我</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    addCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// hooks\r\nfunction _Example() {\r\n    const [count, setCount] = useState(0)\r\n    return (\r\n        <div>\r\n            <p>你点击{count}次</p>\r\n            <button onClick={() => setCount(count + 1)}>点我</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// hooks 多状态声明\r\nfunction __Example() {\r\n    const [age, setAge] = useState(18)\r\n    const [sex, setSex] = useState('男')\r\n    const [work, setWork] = useState('前端工程师')\r\n    const [likes, setLikes] = useState(['苹果', '香蕉'])\r\n\r\n\r\n    const addLikes = () => {\r\n        let _likes = JSON.parse(JSON.stringify(likes))\r\n        _likes.push('猕猴桃' + Date.now())\r\n        setLikes(_likes)\r\n        console.log(likes)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>age:{age}</p>\r\n            <p>sex:{sex}</p>\r\n            <p>work:{work}</p>\r\n            <p>likes:</p>\r\n            <ul>\r\n                {\r\n                    likes.map((item, i) => <li key={i}>{item}</li>)\r\n                }\r\n\r\n            </ul>\r\n            <button onClick={addLikes}>add likes</button>\r\n        </div>\r\n    )\r\n}\r\nexport default __Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example2.js",["80"],"import React, { Component } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\r\n/*\r\n    useEffect\r\n\r\n\r\n    useEffect的第二个参数，它是一个数组，数组中可以写入很多状态对应的变量，\r\n    意思是当状态值发生变化时，我们才进行解绑。但是当传空数组[]时，就是当组件将被销毁时才进行解绑，\r\n    这也就实现了componentWillUnmount的生命周期函数。\r\n*/\r\n// 类\r\nclass Example extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(`挂载, 初始为:${this.state.count}`)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(`更新, 更新为：${this.state.count}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>你点击{this.state.count}次</p>\r\n                <button onClick={this.addCount}>点我</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    addCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n}\r\n\r\nfunction Index() {\r\n    useEffect(() => {\r\n        console.log(`useEffect ... 进入Index页`)\r\n        // 返回一个函数进行解绑\r\n        return () => {\r\n            console.log(`离开 Index `)\r\n        }\r\n    },[])\r\n    return <h2>首页</h2>\r\n}\r\n\r\nfunction List() {\r\n    useEffect(() => {\r\n        console.log(`useEffect ... 进入List页`)\r\n        // 返回一个函数进行解绑\r\n        return () => {\r\n            console.log(`离开 List `)\r\n        }\r\n    },[])\r\n    return <h2>列表页</h2>\r\n}\r\n\r\n\r\n\r\nfunction _Example() {\r\n    const [count, setCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        console.log(`挂载：初始为：${count}`)\r\n        return()=>{\r\n            console.log(`解绑：更新为：${count}`)\r\n        }\r\n    },[count])\r\n\r\n    return (\r\n        <div>\r\n            <p>你点击{count}次</p>\r\n            <button onClick={() => { setCount(count + 1) }}>点我</button>\r\n            <Router>\r\n                <ul>\r\n                    <li ><Link to=\"/\">首页</Link></li>\r\n                    <li ><Link to=\"/list\">列表页</Link></li>\r\n                </ul>\r\n                <Route path=\"/\" exact component={Index}></Route>\r\n                <Route path=\"/list\" exact component={List}></Route>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default _Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example3.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example4.js",["81"],"import { useReducer, createContext, useContext } from 'react'\r\n\r\n/*\r\n\r\n    useReducer\r\n*/\r\n\r\n// useReducer 初体验\r\nfunction Example() {\r\n    const [count, dispatch] = useReducer((state, action) => {\r\n        switch (action) {\r\n            case 'add':\r\n                return state + 1\r\n            case 'sub':\r\n                return state - 1\r\n            default:\r\n                return state\r\n        }\r\n    }, 0)\r\n\r\n    return (\r\n        <div>\r\n            <h2>现在的分数是{count}</h2>\r\n            <button onClick={() => dispatch('add')}>加</button>\r\n            <button onClick={() => dispatch('sub')}>减</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// 小案例 \r\n\r\n// 共享的color.js\r\nconst ColorContext = createContext()\r\nconst UPDATE_COLOR = \"update-color\"\r\n\r\nconst _reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_COLOR:\r\n            return action.color\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst Color = props => {\r\n    const [color, dispatch] = useReducer(_reducer, 'pink')\r\n    return (\r\n        <ColorContext.Provider value={{ color, dispatch }}>\r\n            {props.children}\r\n        </ColorContext.Provider>\r\n    )\r\n}\r\n\r\nfunction ShowArea() {\r\n    const { color } = useContext(ColorContext)\r\n    return (<div style={{ color: color }}>字体颜色为{color}</div>)\r\n}\r\n\r\nfunction Buttons() {\r\n    const { dispatch } = useContext(ColorContext)\r\n    return (\r\n        <div>\r\n            <button onClick={() => { dispatch({ type: 'update-color', color: 'pink' }) }}>pink</button>\r\n            <button onClick={() => { dispatch({ type: 'update-color', color: 'blue' }) }}>blue</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction _Example() {\r\n    return (\r\n        <div>\r\n            <Color>\r\n                <ShowArea />\r\n                <Buttons />\r\n            </Color>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example5.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example6.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example7.js",["82"],"import { useState, useEffect, useCallback } from 'react'\r\n\r\n/*\r\n    1. 自定义hooks  \r\n    2. useCallback :目的是为了缓存方法(useMemo是为了缓存变量)\r\n\r\n*/\r\n\r\nfunction useWinSize() {\r\n    const [size, setSize] = useState({\r\n        width: document.documentElement.clientWidth,\r\n        height: document.documentElement.clientHeight\r\n    })\r\n\r\n    const onResize = useCallback(() => {\r\n        setSize({\r\n            width: document.documentElement.clientWidth,\r\n            height: document.documentElement.clientHeight\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', onResize)\r\n        return () => {\r\n            window.removeEventListener('resize', onResize)\r\n        }\r\n    }, [])\r\n\r\n    return size\r\n}\r\n\r\nfunction Example() {\r\n    const size = useWinSize()\r\n    return (\r\n        <div>\r\n            <p>页面宽度：{size.width}</p>\r\n            <p>页面高度：{size.height}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Example\r\n","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\index.js",[],"D:\\mwork\\github\\react-case\\src\\components\\router-demo\\index.js",[],"D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example1.js",["83","84"],"\r\nimport { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n/*\r\n    动态传值\r\n*/\r\nfunction Index() {\r\n    const [list, setList] = useState([\r\n        { uid: 123, title: '个人博客-1' },\r\n        { uid: 456, title: '个人博客-2' },\r\n        { uid: 789, title: '个人博客-3' },\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            这里是首页\r\n            <ul>\r\n                {\r\n                    list.map(item=><li key = {item.uid}><Link to={`/appRoute/chuancan/list/${item.uid}`}>{item.title}</Link></li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction List(props) {\r\n    const [id, setId] = useState(-1)\r\n    /*\r\n        pach:自己定义的路由规则，可以清楚的看到是可以产地id参数的。\r\n        url: 真实的访问路径，这上面可以清楚的看到传递过来的参数是什么。\r\n        params：传递过来的参数，key和value值。\r\n    */\r\n\r\n    useEffect(() => {\r\n        console.log('参数', props.match)\r\n        setId(props.match.params.id)\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            我是列表详情页:{id}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Example() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <ul>\r\n                    <li><Link to=\"/appRoute/chuancan/home\">首页</Link></li>\r\n                </ul>\r\n                <Route path=\"/appRoute/chuancan/home\" component={Index}></Route>\r\n                <Route path=\"/appRoute/chuancan/list/:id\" component={List}></Route>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default Example","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example2.js",["85","86","87","88"],"\r\nimport { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\r\n\r\n\r\n/*\r\n\r\n    标签式重定向/编程式重定向\r\n*/\r\n\r\n\r\n\r\nfunction Example(props) {\r\n\r\n    const { history } = props\r\n    \r\n    useEffect(()=>{\r\n        // 编程式重定向\r\n        history.push('/appRoute/chuancan/home')\r\n    },[])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* 标签式重定向 */}\r\n            <Redirect to = \"/appRoute/chuancan/home\"/>\r\n            example2\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Example","D:\\mwork\\github\\react-case\\src\\components\\communication\\context.js",[],"D:\\mwork\\github\\react-case\\src\\components\\communication\\hoc.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":7,"nodeType":"95","messageId":"96","endLine":11,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":37,"column":10,"nodeType":"95","messageId":"96","endLine":37,"endColumn":18},{"ruleId":"93","severity":1,"message":"98","line":49,"column":17,"nodeType":"95","messageId":"96","endLine":49,"endColumn":23},{"ruleId":"93","severity":1,"message":"99","line":50,"column":17,"nodeType":"95","messageId":"96","endLine":50,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":51,"column":18,"nodeType":"95","messageId":"96","endLine":51,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":13,"column":7,"nodeType":"95","messageId":"96","endLine":13,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":9,"column":10,"nodeType":"95","messageId":"96","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":27,"column":8,"nodeType":"103","endLine":27,"endColumn":10,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":9,"column":18,"nodeType":"95","messageId":"96","endLine":9,"endColumn":25},{"ruleId":"101","severity":1,"message":"106","line":38,"column":8,"nodeType":"103","endLine":38,"endColumn":12,"suggestions":"107"},{"ruleId":"93","severity":1,"message":"108","line":3,"column":27,"nodeType":"95","messageId":"96","endLine":3,"endColumn":33},{"ruleId":"93","severity":1,"message":"109","line":3,"column":35,"nodeType":"95","messageId":"96","endLine":3,"endColumn":40},{"ruleId":"93","severity":1,"message":"110","line":3,"column":42,"nodeType":"95","messageId":"96","endLine":3,"endColumn":46},{"ruleId":"101","severity":1,"message":"111","line":20,"column":7,"nodeType":"103","endLine":20,"endColumn":9,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Example' is defined but never used.","Identifier","unusedVar","'_Example' is defined but never used.","'setAge' is assigned a value but never used.","'setSex' is assigned a value but never used.","'setWork' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'setList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match'. Either include it or remove the dependency array.",["116"],"'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [onResize]",{"range":"124","text":"125"},"Update the dependencies array to be: [id, props.match]",{"range":"126","text":"127"},"Update the dependencies array to be: [history]",{"range":"128","text":"129"},[704,706],"[onResize]",[924,928],"[id, props.match]",[320,322],"[history]"]