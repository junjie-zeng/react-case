[{"D:\\mwork\\github\\react-case\\src\\index.js":"1","D:\\mwork\\github\\react-case\\src\\reportWebVitals.js":"2","D:\\mwork\\github\\react-case\\src\\App.js":"3","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example1.js":"4","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example2.js":"5","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example3.js":"6","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example4.js":"7","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example5.js":"8","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example6.js":"9","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example7.js":"10","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\index.js":"11","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\index.js":"12","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example1.js":"13","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example2.js":"14","D:\\mwork\\github\\react-case\\src\\components\\communication\\context.js":"15","D:\\mwork\\github\\react-case\\src\\components\\communication\\hoc.js":"16","D:\\mwork\\github\\react-case\\src\\components\\editor\\index.js":"17","D:\\mwork\\github\\react-case\\src\\components\\render-props\\index.js":"18","D:\\mwork\\github\\react-case\\src\\components\\render-props\\Mouse.js":"19","D:\\mwork\\github\\react-case\\src\\components\\antd\\index.js":"20","D:\\mwork\\github\\react-case\\src\\components\\antd\\Btn.js":"21","D:\\mwork\\github\\react-case\\src\\components\\antd\\SiderDemo.js":"22"},{"size":510,"mtime":1618810408047,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1611545147069,"results":"25","hashOfConfig":"24"},{"size":2754,"mtime":1618813362420,"results":"26","hashOfConfig":"24"},{"size":1788,"mtime":1611565303467,"results":"27","hashOfConfig":"24"},{"size":2516,"mtime":1611565298147,"results":"28","hashOfConfig":"24"},{"size":649,"mtime":1611567367621,"results":"29","hashOfConfig":"24"},{"size":1892,"mtime":1611565264699,"results":"30","hashOfConfig":"24"},{"size":1022,"mtime":1611566803776,"results":"31","hashOfConfig":"24"},{"size":604,"mtime":1611566190195,"results":"32","hashOfConfig":"24"},{"size":1002,"mtime":1617247250327,"results":"33","hashOfConfig":"24"},{"size":1805,"mtime":1611640170590,"results":"34","hashOfConfig":"24"},{"size":960,"mtime":1611649398959,"results":"35","hashOfConfig":"24"},{"size":1651,"mtime":1611649253088,"results":"36","hashOfConfig":"24"},{"size":564,"mtime":1611649257261,"results":"37","hashOfConfig":"24"},{"size":2477,"mtime":1612164881643,"results":"38","hashOfConfig":"24"},{"size":1673,"mtime":1612156413090,"results":"39","hashOfConfig":"24"},{"size":5241,"mtime":1614233455468,"results":"40","hashOfConfig":"24"},{"size":992,"mtime":1617244595594,"results":"41","hashOfConfig":"24"},{"size":749,"mtime":1617244067805,"results":"42","hashOfConfig":"24"},{"size":377,"mtime":1618811920711,"results":"43","hashOfConfig":"24"},{"size":488,"mtime":1618810704551,"results":"44","hashOfConfig":"24"},{"size":2190,"mtime":1618815699353,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nq2izi",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\mwork\\github\\react-case\\src\\index.js",[],"D:\\mwork\\github\\react-case\\src\\reportWebVitals.js",[],["98","99"],"D:\\mwork\\github\\react-case\\src\\App.js",["100","101","102","103","104","105"],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example1.js",["106","107","108","109","110"],"import React, { Component } from 'react'\r\nimport { useState } from 'react'\r\n/*\r\n\r\n    useState\r\n    \r\n    useState 是react自带的一个hook函数，它的作用是用来声明状态变量。\r\n\r\n*/\r\n// 类\r\nclass Example extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>你点击{this.state.count}次</p>\r\n                <button onClick={this.addCount}>点我</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    addCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// hooks\r\nfunction _Example() {\r\n    const [count, setCount] = useState(0)\r\n    return (\r\n        <div>\r\n            <p>你点击{count}次</p>\r\n            <button onClick={() => setCount(count + 1)}>点我</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// hooks 多状态声明\r\nfunction __Example() {\r\n    const [age, setAge] = useState(18)\r\n    const [sex, setSex] = useState('男')\r\n    const [work, setWork] = useState('前端工程师')\r\n    const [likes, setLikes] = useState(['苹果', '香蕉'])\r\n\r\n\r\n    const addLikes = () => {\r\n        let _likes = JSON.parse(JSON.stringify(likes))\r\n        _likes.push('猕猴桃' + Date.now())\r\n        setLikes(_likes)\r\n        console.log(likes)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>age:{age}</p>\r\n            <p>sex:{sex}</p>\r\n            <p>work:{work}</p>\r\n            <p>likes:</p>\r\n            <ul>\r\n                {\r\n                    likes.map((item, i) => <li key={i}>{item}</li>)\r\n                }\r\n\r\n            </ul>\r\n            <button onClick={addLikes}>add likes</button>\r\n        </div>\r\n    )\r\n}\r\nexport default __Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example2.js",["111"],"import React, { Component } from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\r\n/*\r\n    useEffect\r\n\r\n\r\n    useEffect的第二个参数，它是一个数组，数组中可以写入很多状态对应的变量，\r\n    意思是当状态值发生变化时，我们才进行解绑。但是当传空数组[]时，就是当组件将被销毁时才进行解绑，\r\n    这也就实现了componentWillUnmount的生命周期函数。\r\n*/\r\n// 类\r\nclass Example extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(`挂载, 初始为:${this.state.count}`)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(`更新, 更新为：${this.state.count}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>你点击{this.state.count}次</p>\r\n                <button onClick={this.addCount}>点我</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    addCount = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n}\r\n\r\nfunction Index() {\r\n    useEffect(() => {\r\n        console.log(`useEffect ... 进入Index页`)\r\n        // 返回一个函数进行解绑\r\n        return () => {\r\n            console.log(`离开 Index `)\r\n        }\r\n    },[])\r\n    return <h2>首页</h2>\r\n}\r\n\r\nfunction List() {\r\n    useEffect(() => {\r\n        console.log(`useEffect ... 进入List页`)\r\n        // 返回一个函数进行解绑\r\n        return () => {\r\n            console.log(`离开 List `)\r\n        }\r\n    },[])\r\n    return <h2>列表页</h2>\r\n}\r\n\r\n\r\n\r\nfunction _Example() {\r\n    const [count, setCount] = useState(0)\r\n\r\n    useEffect(() => {\r\n        console.log(`挂载：初始为：${count}`)\r\n        return()=>{\r\n            console.log(`解绑：更新为：${count}`)\r\n        }\r\n    },[count])\r\n\r\n    return (\r\n        <div>\r\n            <p>你点击{count}次</p>\r\n            <button onClick={() => { setCount(count + 1) }}>点我</button>\r\n            <Router>\r\n                <ul>\r\n                    <li ><Link to=\"/\">首页</Link></li>\r\n                    <li ><Link to=\"/list\">列表页</Link></li>\r\n                </ul>\r\n                <Route path=\"/\" exact component={Index}></Route>\r\n                <Route path=\"/list\" exact component={List}></Route>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default _Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example3.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example4.js",["112"],"import { useReducer, createContext, useContext } from 'react'\r\n\r\n/*\r\n\r\n    useReducer\r\n*/\r\n\r\n// useReducer 初体验\r\nfunction Example() {\r\n    const [count, dispatch] = useReducer((state, action) => {\r\n        switch (action) {\r\n            case 'add':\r\n                return state + 1\r\n            case 'sub':\r\n                return state - 1\r\n            default:\r\n                return state\r\n        }\r\n    }, 0)\r\n\r\n    return (\r\n        <div>\r\n            <h2>现在的分数是{count}</h2>\r\n            <button onClick={() => dispatch('add')}>加</button>\r\n            <button onClick={() => dispatch('sub')}>减</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n// 小案例 \r\n\r\n// 共享的color.js\r\nconst ColorContext = createContext()\r\nconst UPDATE_COLOR = \"update-color\"\r\n\r\nconst _reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_COLOR:\r\n            return action.color\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst Color = props => {\r\n    const [color, dispatch] = useReducer(_reducer, 'pink')\r\n    return (\r\n        <ColorContext.Provider value={{ color, dispatch }}>\r\n            {props.children}\r\n        </ColorContext.Provider>\r\n    )\r\n}\r\n\r\nfunction ShowArea() {\r\n    const { color } = useContext(ColorContext)\r\n    return (<div style={{ color: color }}>字体颜色为{color}</div>)\r\n}\r\n\r\nfunction Buttons() {\r\n    const { dispatch } = useContext(ColorContext)\r\n    return (\r\n        <div>\r\n            <button onClick={() => { dispatch({ type: 'update-color', color: 'pink' }) }}>pink</button>\r\n            <button onClick={() => { dispatch({ type: 'update-color', color: 'blue' }) }}>blue</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction _Example() {\r\n    return (\r\n        <div>\r\n            <Color>\r\n                <ShowArea />\r\n                <Buttons />\r\n            </Color>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Example","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example5.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example6.js",[],"D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\Example7.js",["113"],"import { useState, useEffect, useCallback } from 'react'\r\n\r\n/*\r\n    1. 自定义hooks  \r\n    2. useCallback :目的是为了缓存方法(useMemo是为了缓存变量)\r\n\r\n*/\r\n\r\nfunction useWinSize() {\r\n    const [size, setSize] = useState({\r\n        width: document.documentElement.clientWidth,\r\n        height: document.documentElement.clientHeight\r\n    })\r\n\r\n    const onResize = useCallback(() => {\r\n        setSize({\r\n            width: document.documentElement.clientWidth,\r\n            height: document.documentElement.clientHeight\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', onResize)\r\n        return () => {\r\n            window.removeEventListener('resize', onResize)\r\n        }\r\n    }, [])\r\n\r\n    return size\r\n}\r\n\r\nfunction Example() {\r\n    const size = useWinSize()\r\n    return (\r\n        <div>\r\n            <p>页面宽度：{size.width}</p>\r\n            <p>页面高度：{size.height}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Example\r\n","D:\\mwork\\github\\react-case\\src\\components\\hooks-demo\\index.js",[],"D:\\mwork\\github\\react-case\\src\\components\\router-demo\\index.js",[],"D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example1.js",["114","115"],"\r\nimport { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n/*\r\n    动态传值\r\n*/\r\nfunction Index() {\r\n    const [list, setList] = useState([\r\n        { uid: 123, title: '个人博客-1' },\r\n        { uid: 456, title: '个人博客-2' },\r\n        { uid: 789, title: '个人博客-3' },\r\n    ])\r\n\r\n    return (\r\n        <div>\r\n            这里是首页\r\n            <ul>\r\n                {\r\n                    list.map(item=><li key = {item.uid}><Link to={`/appRoute/chuancan/list/${item.uid}`}>{item.title}</Link></li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction List(props) {\r\n    const [id, setId] = useState(-1)\r\n    /*\r\n        pach:自己定义的路由规则，可以清楚的看到是可以产地id参数的。\r\n        url: 真实的访问路径，这上面可以清楚的看到传递过来的参数是什么。\r\n        params：传递过来的参数，key和value值。\r\n    */\r\n\r\n    useEffect(() => {\r\n        console.log('参数', props.match)\r\n        setId(props.match.params.id)\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            我是列表详情页:{id}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Example() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <ul>\r\n                    <li><Link to=\"/appRoute/chuancan/home\">首页</Link></li>\r\n                </ul>\r\n                <Route path=\"/appRoute/chuancan/home\" component={Index}></Route>\r\n                <Route path=\"/appRoute/chuancan/list/:id\" component={List}></Route>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default Example","D:\\mwork\\github\\react-case\\src\\components\\router-demo\\Example2.js",["116","117","118","119"],"\r\nimport { useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom'\r\n\r\n\r\n/*\r\n\r\n    标签式重定向/编程式重定向\r\n*/\r\n\r\n\r\n\r\nfunction Example(props) {\r\n\r\n    const { history } = props\r\n    \r\n    useEffect(()=>{\r\n        // 编程式重定向\r\n        history.push('/appRoute/chuancan/home')\r\n    },[])\r\n\r\n    return (\r\n\r\n        <div>\r\n            {/* 标签式重定向 */}\r\n            <Redirect to = \"/appRoute/chuancan/home\"/>\r\n            example2\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Example","D:\\mwork\\github\\react-case\\src\\components\\communication\\context.js",[],"D:\\mwork\\github\\react-case\\src\\components\\communication\\hoc.js",[],"D:\\mwork\\github\\react-case\\src\\components\\editor\\index.js",["120","121"],"import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport * as $ from 'jquery'\r\n\r\nimport 'jquery-ui/ui/widgets/draggable'\r\nimport 'jquery-ui/ui/widgets/resizable'\r\nimport 'jquery-ui/themes/base/resizable.css'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet pageInfo = [\r\n    {\r\n        id: 0,\r\n        type: 'button',\r\n        _class: {},\r\n        _style: { color: 'white', fontSize: 12, textAlgin: 'center', x: 300, y: 100, bgColor: 'goldenrod', bdColor: 'goldenrod', bdRadius: 10, bold: false, fontFamily: '', width: 100, height: 30 },\r\n        _content: { text: 'hello word', link: 'http://www.baidu.com' }\r\n\r\n    },\r\n    {\r\n        id: 1,\r\n        type: 'button',\r\n        _class: {},\r\n        _style: { color: 'white', fontSize: 12, textAlgin: 'center', x: 300, y: 200, bgColor: '#3d9be9', bdColor: '#3d9be9', bdRadius: 10, bold: false, fontFamily: '', width: 100, height: 30 },\r\n        _content: { text: 'hello word', link: 'http://www.baidu.com' }\r\n\r\n    },\r\n]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            pageInfo: pageInfo,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        // 拖拽\r\n        $('.drag-ele').draggable({\r\n            containment: \"parent\",\r\n            stop: (ev, ui) => {\r\n                let $target = $(ev.target)\r\n                let index = $target.attr('data-index')\r\n                let { top, left } = ui.position\r\n                let pageInfo = this.state.pageInfo\r\n                pageInfo[index]._style.x = left\r\n                pageInfo[index]._style.y = top\r\n\r\n                this.setState({\r\n                    pageInfo\r\n                })\r\n\r\n                console.log('update after ...', JSON.stringify(this.state.pageInfo))\r\n            }\r\n        })\r\n\r\n        // 缩放\r\n        $('.drag-ele').resizable({\r\n            resize: (ev, ui) => {\r\n                let $target = $(ev.target)\r\n                let { width, height } = ui.size\r\n                let index = $target.attr('data-index')\r\n                let pageInfo = this.state.pageInfo\r\n                pageInfo[index]._style.width = width\r\n                pageInfo[index]._style.height = height\r\n                console.log(ui)\r\n                this.setState({\r\n                    pageInfo\r\n                })\r\n            },\r\n            stop: (ev, ui) => {\r\n                console.log(ui)\r\n\r\n            }\r\n        })\r\n        // console.log($('.drag-ele').resizable)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { pageInfo } = this.state\r\n        return (\r\n            <div className=\"editor-box\">\r\n                <div className=\"editor-box-element\"></div>\r\n                <div className=\"editor-box-content\">\r\n                    {\r\n                        pageInfo.map((ele, index) => (\r\n                            ele.type == 'button' ?\r\n                                <div className=\"drag-ele ele-button\" data-index={index} key={ele.id} style={{\r\n                                    left: ele._style.x,\r\n                                    top: ele._style.y,\r\n                                    width: `${ele._style.width}px`,\r\n                                    height: `${ele._style.height}px`,\r\n                                    lineHeight: `${ele._style.height}px`,\r\n                                }}>\r\n                                    <a className=\"btn\" style={{\r\n                                        background: ele._style.bgColor,\r\n                                        borderColor: ele._style.bdColor,\r\n                                        borderRadius: `${ele._style.bdRadius}px`,\r\n                                        textAlign: ele._style.textAlgin,\r\n                                        fontSize: `${ele._style.fontSize}px`,\r\n                                        color: ele._style.color\r\n\r\n                                    }}>{ele._content.text}</a>\r\n                                </div>\r\n                                :\r\n                                ''\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"setting-box-element\">\r\n\r\n                </div>\r\n                <div className=\"global-operation\">\r\n                    <button onClick={this.getData}>get data</button>\r\n                </div>\r\n                <Button onClick={this.open}>打开模态框</Button>\r\n                <Modal show={this.state.showModal} onHide={this.close}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>标题</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        body \r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={this.close}>取消</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    getData = () => {\r\n        console.log('update after ...', this.state.pageInfo)\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    open = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n}\r\n\r\nexport default Editor","D:\\mwork\\github\\react-case\\src\\components\\render-props\\index.js",[],"D:\\mwork\\github\\react-case\\src\\components\\render-props\\Mouse.js",[],"D:\\mwork\\github\\react-case\\src\\components\\antd\\index.js",["122"],"D:\\mwork\\github\\react-case\\src\\components\\antd\\Btn.js",[],"D:\\mwork\\github\\react-case\\src\\components\\antd\\SiderDemo.js",["123","124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":12,"column":24,"nodeType":"132","messageId":"133","endLine":12,"endColumn":34},{"ruleId":"130","severity":1,"message":"134","line":12,"column":36,"nodeType":"132","messageId":"133","endLine":12,"endColumn":40},{"ruleId":"130","severity":1,"message":"135","line":14,"column":9,"nodeType":"132","messageId":"133","endLine":14,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":15,"column":17,"nodeType":"132","messageId":"133","endLine":15,"endColumn":24},{"ruleId":"130","severity":1,"message":"137","line":15,"column":26,"nodeType":"132","messageId":"133","endLine":15,"endColumn":32},{"ruleId":"130","severity":1,"message":"138","line":15,"column":34,"nodeType":"132","messageId":"133","endLine":15,"endColumn":39},{"ruleId":"130","severity":1,"message":"139","line":11,"column":7,"nodeType":"132","messageId":"133","endLine":11,"endColumn":14},{"ruleId":"130","severity":1,"message":"140","line":37,"column":10,"nodeType":"132","messageId":"133","endLine":37,"endColumn":18},{"ruleId":"130","severity":1,"message":"141","line":49,"column":17,"nodeType":"132","messageId":"133","endLine":49,"endColumn":23},{"ruleId":"130","severity":1,"message":"142","line":50,"column":17,"nodeType":"132","messageId":"133","endLine":50,"endColumn":23},{"ruleId":"130","severity":1,"message":"143","line":51,"column":18,"nodeType":"132","messageId":"133","endLine":51,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":13,"column":7,"nodeType":"132","messageId":"133","endLine":13,"endColumn":14},{"ruleId":"130","severity":1,"message":"139","line":9,"column":10,"nodeType":"132","messageId":"133","endLine":9,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":27,"column":8,"nodeType":"146","endLine":27,"endColumn":10,"suggestions":"147"},{"ruleId":"130","severity":1,"message":"148","line":9,"column":18,"nodeType":"132","messageId":"133","endLine":9,"endColumn":25},{"ruleId":"144","severity":1,"message":"149","line":38,"column":8,"nodeType":"146","endLine":38,"endColumn":12,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"151","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":33},{"ruleId":"130","severity":1,"message":"152","line":3,"column":35,"nodeType":"132","messageId":"133","endLine":3,"endColumn":40},{"ruleId":"130","severity":1,"message":"153","line":3,"column":42,"nodeType":"132","messageId":"133","endLine":3,"endColumn":46},{"ruleId":"144","severity":1,"message":"154","line":20,"column":7,"nodeType":"146","endLine":20,"endColumn":9,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":107,"column":38,"nodeType":"158","messageId":"159","endLine":107,"endColumn":40},{"ruleId":"160","severity":1,"message":"161","line":115,"column":37,"nodeType":"162","endLine":123,"endColumn":40},{"ruleId":"130","severity":1,"message":"163","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":11},{"ruleId":"130","severity":1,"message":"164","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":34},{"ruleId":"130","severity":1,"message":"165","line":5,"column":9,"nodeType":"132","messageId":"133","endLine":5,"endColumn":15},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Breadcrumb' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'SubMenu' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Example' is defined but never used.","'_Example' is defined but never used.","'setAge' is assigned a value but never used.","'setSex' is assigned a value but never used.","'setWork' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.","ArrayExpression",["168"],"'setList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match'. Either include it or remove the dependency array.",["169"],"'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Btn' is defined but never used.","'Component' is defined but never used.","'Header' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [onResize]",{"range":"177","text":"178"},"Update the dependencies array to be: [id, props.match]",{"range":"179","text":"180"},"Update the dependencies array to be: [history]",{"range":"181","text":"182"},[704,706],"[onResize]",[924,928],"[id, props.match]",[320,322],"[history]"]